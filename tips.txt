v_139=relation between products items comments
v_141=customize django user https://docs.djangoproject.com/en/5.0/topics/auth/customizing/#a-full-example
USERNAME_FIELD that filed is unique and use it for login
v_142=code taeid
v-146 = https://docs.djangoproject.com/en/5.0/ref/forms/validation/
v_147=validation error:slug field
for slug we don't need validator but for char filed we need it
import -->from django.core import validators
FOR CHANGE LANGUAGE OF PROJECT YOU MUST CHANGE LANGUAGE CODE IN SETTING SECTION  "fa_ir"
https://www.geeksforgeeks.org/python-form-validation-using-django/
v_148=validation error for form totally
{% for error in form.non_field_errors%} in html for show it
also you can write custom validator
v_149=sms for rejister
v_150=rejister with number,senario
v_151=rejister with number (  code )
v_152=rejister with number (  code ) --> import tip return redirect(reverse("account:user_checkcode")+ f'?phone={cd["phone"]}')
v_153=user hide phone rejister with ####uniqe token###
v_154=user hide phone rejister (uuid random token with time)( if user existed use User.objects.get_or_create)
v_155=information about Meta class
v_156=email rejister ""https://docs.djangoproject.com/en/5.0/topics/auth/customizing/""
login with phone and email at the same time
v_157=user backend for login and rejister , validation error for phone otp
v_158=fix deatial
v_160= manage products
v_161= manage products
v-162=manage products details